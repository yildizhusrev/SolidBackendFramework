
@model TmTFramework.MvcWebUI.Models.LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>TMT Bilişim / @MvcApplication.DatabaseName</title>
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <link rel="stylesheet" href="/content/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/content/bower_components/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/content/bower_components/Ionicons/css/ionicons.min.css">
    <link rel="stylesheet" href="/content/dist/css/AdminLTE.min.css">
    <link rel="stylesheet" href="/content/iCheck/square/blue.css">
    <link rel="stylesheet" href="/content/https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>
<body class="hold-transition login-page">
    <div class="login-box">
        <div class="login-logo">
            <a href="http://tmtbilisim.com.tr/"><img src="/content/dist/img/logo.png" width="200px"></a>
        </div>
        <div class="login-box-body">
            <p class="login-box-msg">Oturumu Açınız</p>

            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group has-feedback">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Kullanıcı Adı" })
                    <span class="fa fa-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                </div>
                <div class="form-group has-feedback">


                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Şifre" })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                </div>
                @*<div class="form-group has-feedback">
                        <div class="col-md-offset-2 col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(m => m.RememberMe)
                                @Html.LabelFor(m => m.RememberMe)
                            </div>
                        </div>
                    </div>*@
                <div class="row">
                    <div class="col-xs-12">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Giriş Yap</button>
                    </div>
                </div>
                <p>
                    @MvcApplication.DatabaseName <br />
                    @HttpContext.Current.Request.Url.Host
                </p>
                @*  <p>
                         @Html.ActionLink("Register as a new user", "Register")
                     </p>
                    Enable this once you have account confirmation enabled for password reset functionality
                         <p>
                             @Html.ActionLink("Forgot your password?", "ForgotPassword")
                         </p>*@
            }

        </div>
    </div>

    <script src="/content/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="/content/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="/content/plugins/iCheck/icheck.min.js"></script>
    <script>
        $(function () {
            $('input').iCheck({
                checkboxClass: 'icheckbox_square-blue',
                radioClass: 'iradio_square-blue',
                increaseArea: '20%' /* optional */
            });
        });
    </script>

</body>
</html>


