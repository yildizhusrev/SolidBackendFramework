@model TmTFramework.Entities.Concrete.Musteri

@{
    string hidden = "";
    ViewBag.Title = "Müşteri Kayıt";
    if (IsAjax)
    {
        Layout = null;
        hidden = "hidden";
    }
}


    <section class="content-header @hidden">
        <h1>
            Müşteri Kayıt
        </h1>
    </section>




@using (Ajax.BeginForm(null, null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "Basarili", OnFailure="Hatali" }, new { id = "formKapsayici" }))
{

    @Html.AntiForgeryToken()
    <section class="content">
        <div class="box box-default">
            <div class="box-body">
                <div class="row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AdSoyad, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.AdSoyad, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.AdSoyad) } })
                            @Html.ValidationMessageFor(model => model.AdSoyad, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Telefon, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.Telefon) } })
                            @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.Email) } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Adres, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.Adres) } })
                            @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "text-danger" })

                        </div>

                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.VergiDairesi, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.VergiDairesi, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.VergiDairesi) } })
                            @Html.ValidationMessageFor(model => model.VergiDairesi, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.VergiNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.VergiNo, new { htmlAttributes = new { @class = "form-control", placeholder = Html.DisplayNameFor(x => x.VergiNo) } })
                            @Html.ValidationMessageFor(model => model.VergiNo, "", new { @class = "text-danger" })
                        </div>

                        <div>

                        </div>


                    </div>
                </div>
            </div>
        </div>
        <div class="box-footer">

          @Html.Partial("_FormKaydetIptalPartial", new ViewDataDictionary { { "SubmitButtonText", "Kaydet" } })
        </div>
    </section>
}

<script>
    function Basarili(cevap) {
        if (cevap.sonuc) {
            toastr.success(cevap.mesaj);
            MustangModal.close();
        } else {
            toastr.error(cevap.mesaj);
        }
    }
    function Hatali(cevap) {
        alert(cevap.data);
    }
    function PencereKapat() {
        MustangModal.close();
    }

    //function Basarili(cevap) {
    //    console.log(cevap);
    //    if (cevap.sonuc) {
    //        toastr.info("Sayfa yönlendiriliyor...");
    //        toastr.success(cevap.mesaj);
    //        MustangModal.close();
    //        //setTimeout("window.location.replace('" + cevap.data + "');", 2000);
    //    } else {
    //        toastr.error(cevap.mesaj);
    //    }
    //}
    //function PencereKapat() {
    //    MustangModal.close();
    //}
</script>

